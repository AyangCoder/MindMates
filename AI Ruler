# MindMates（思维伙伴）需求与设计文档

## 1. 项目概述

MindMates（思维伙伴）是一个创新型对话平台，允许用户同时与多个大语言模型进行交互。该系统支持单模型对话和多模型协同讨论，为用户提供多元化的AI对话体验。

## 2. 版本规划

### 2.1 第一版本（基础版）
- 实现基础对话功能
- 支持两个模型的接入（DeepSeek R1和豆包-1.5Pro-32k）
- 支持单模型对话模式
- 简洁用户界面
- 前后端基础架构搭建

### 2.2 第二版本（增强版）
- 优化多模型协同对话
- 增加简易辩论讨论功能
- 优化用户界面
- 增强对话历史管理

## 2. 核心功能需求（第一版本）

### 2.1 模型接入
- 支持接入两个大语言模型（DeepSeek R1和豆包-1.5Pro-32k）
- 提供简洁的模型选择界面
- 用户可以选择使用哪个模型进行对话

### 2.2 对话功能
- **单模型对话**：用户可与选定的模型进行一对一对话
- 支持基本的文本输入和显示
- 支持代码块格式显示

### 2.3 对话流程
- 用户选择模型后提问，模型在对话窗口中回应
- 系统清晰区分用户和模型的消息
- 支持当前会话的对话历史查看

## 3. 技术实现

### 3.1 模型选型（第一版本）
- 接入火山引擎平台的两个模型：
  - DeepSeek R1 推理模型
  - 豆包-1.5Pro-32k 模型

### 3.2 API接入规范

#### 豆包-1.5Pro-32k模型
```
curl https://ark.cn-beijing.volces.com/api/v3/chat/completions \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ARK_API_KEY" \
  -d '{
    "model": "ep-20250215230853-ndhsj",
    "messages": [
      {"role": "system","content": "你是人工智能助手."},
      {"role": "user","content": "常见的十字花科植物有哪些？"}
    ]
  }'
```

#### DeepSeek R1模型
```
curl https://ark.cn-beijing.volces.com/api/v3/chat/completions \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ARK_API_KEY" \
  -d '{
    "model": "ep-20250215234034-fc2h9",
    "messages": [
      {"role": "system","content": "你是人工智能助手."},
      {"role": "user","content": "常见的十字花科植物有哪些？"}
    ]
  }'
```

## 5. 系统架构设计（第一版本）

### 5.1 前后端分离架构

#### 前端技术栈
- **框架**：React.js + TypeScript
- **UI组件库**：Ant Design
- **状态管理**：React Context API（简化版本）
- **网络请求**：Axios

#### 后端技术栈
- **框架**：Node.js + Express.js
- **数据存储**：本地文件存储（简化版本）
- **API代理**：统一管理模型API调用

### 5.2 系统模块划分（第一版本）

#### 前端模块
1. **模型选择模块**：模型列表展示、单选功能
2. **对话界面模块**：聊天窗口、消息展示、输入区域
3. **简易历史记录**：当前会话的对话历史

#### 后端模块
1. **API代理服务**：统一管理外部API调用，保护API密钥
2. **对话服务**：处理用户对话请求、调用模型API
3. **简易存储服务**：临时存储当前会话内容

## 6. 用户界面设计（第一版本）

### 6.1 整体布局
- 采用简洁的双栏式布局：
  - 左侧：模型选择面板
  - 右侧：对话窗口主体

### 6.2 聊天界面设计
- 简洁的气泡式对话设计：
  - 用户消息右侧显示，模型回复左侧显示
  - 支持基本的文本和代码块格式
  - 不同模型的回复使用不同颜色和标识区分

### 6.3 模型选择界面
- 简单的卡片式设计，展示模型头像和名称
- 支持单选模式

## 7. 数据流设计（第一版本）

### 7.1 单模型对话流程
1. 用户选择单个模型
2. 用户发送消息
3. 前端将消息发送至后端
4. 后端调用选定模型的API
5. 获取模型回复后返回前端
6. 前端展示模型回复

## 8. 项目里程碑

### 8.1 第一版本（基础版）
- 实现DeepSeek R1和豆包-1.5Pro-32k两个模型的接入
- 实现单模型对话功能
- 完成简洁的用户界面
- 实现前后端基础架构

### 8.2 第二版本（增强版）
- 实现多模型协同对话功能
- 增加简易辩论讨论功能
- 优化用户界面和交互体验
- 增强对话历史管理

## 9. 安全与部署考虑

### 9.1 安全考虑
- API密钥存储在后端环境变量中，不暴露给前端
- 使用.env文件和.gitignore确保敏感信息不被提交到GitHub
- 实现基本的请求限流机制

### 9.2 部署方案
- 前端部署在Vercel或Netlify平台
- 后端部署在Vercel Serverless Functions或类似平台
- 使用环境变量管理敏感配置

### 9.3 GitHub项目管理
- 完善.gitignore文件，排除node_modules、.env等敏感或不必要文件
- 提供详细的README.md，包含项目介绍、安装步骤和使用说明
- 明确的许可证声明

## 10. README.md内容规划

README.md将包含以下内容：
- 项目介绍和功能概述
- 技术栈说明
- 本地开发环境搭建步骤
- 环境变量配置说明（不包含实际密钥）
- 部署指南
- 使用示例
- 贡献指南
- 许可证信息

## 11. 第二版本功能规划

- 实现双模型协同对话
- 实现简易辩论讨论功能
- 优化用户界面，增强模型选择面板
- 增强对话历史管理
- 支持更丰富的消息格式
- 增加更多模型支持
- 添加更丰富的UI交互